<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedSettings" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="CaptureCancel" xml:space="preserve">
    <value>Capture Cancel</value>
  </data>
  <data name="CaptureCursor" xml:space="preserve">
    <value>Capture Cursor</value>
  </data>
  <data name="CaptureDisplay" xml:space="preserve">
    <value>Capture Display</value>
  </data>
  <data name="CaptureRegion" xml:space="preserve">
    <value>Capture Region</value>
  </data>
  <data name="CaptureRegionByUserSelection" xml:space="preserve">
    <value>Capture region by user selection</value>
  </data>
  <data name="CaptureWindow" xml:space="preserve">
    <value>Capture Window</value>
  </data>
  <data name="DeleteShortcut" xml:space="preserve">
    <value>Delete shortcut</value>
  </data>
  <data name="DisplayNotFound" xml:space="preserve">
    <value>The display you set could not be found</value>
  </data>
  <data name="EncoderAudioBitrate" xml:space="preserve">
    <value>Audio Bitrate</value>
  </data>
  <data name="EncoderAudioCodec" xml:space="preserve">
    <value>Audio Codec</value>
  </data>
  <data name="EncoderBaseDirectory" xml:space="preserve">
    <value>Recording Path</value>
  </data>
  <data name="EncoderCaptureDisplay" xml:space="preserve">
    <value>Capture Target</value>
  </data>
  <data name="EncoderFileFormat" xml:space="preserve">
    <value>File Format</value>
  </data>
  <data name="EncoderFrameRate" xml:space="preserve">
    <value>Frame Rate</value>
  </data>
  <data name="EncoderSettings" xml:space="preserve">
    <value>Recording Settings</value>
  </data>
  <data name="EncoderStatusPauseMessage" xml:space="preserve">
    <value>Recording (Pause)</value>
  </data>
  <data name="EncoderStatusStartMessage" xml:space="preserve">
    <value>Recording</value>
  </data>
  <data name="EncoderStatusStopMessage" xml:space="preserve">
    <value>Waiting for recording</value>
  </data>
  <data name="EncoderVideoBitrate" xml:space="preserve">
    <value>Video Bitrate</value>
  </data>
  <data name="EncoderVideoCodec" xml:space="preserve">
    <value>Video Codec</value>
  </data>
  <data name="ExcludeAppFromCapture" xml:space="preserve">
    <value>Exclude app from capture.</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FailedToStartRecording" xml:space="preserve">
    <value>Failed to start recording</value>
  </data>
  <data name="HardwareEncoderNotFoundWarning" xml:space="preserve">
    <value>Hardware encoder not found. Use a software encoder.</value>
  </data>
  <data name="IncludeAppFromCapture" xml:space="preserve">
    <value>Include app from capture.</value>
  </data>
  <data name="NotSpecified" xml:space="preserve">
    <value>Not specified</value>
  </data>
  <data name="OpenEncodingFolderInFileExplorer" xml:space="preserve">
    <value>Open a recording folder in File Explorer</value>
  </data>
  <data name="OpenFolderInFileExplorer" xml:space="preserve">
    <value>Open a folder in File Explorer</value>
  </data>
  <data name="PauseRecording" xml:space="preserve">
    <value>Pause Recording</value>
  </data>
  <data name="PrimaryDisplay" xml:space="preserve">
    <value>Primary Display</value>
  </data>
  <data name="RecordingPathDoesNotExist" xml:space="preserve">
    <value>Recording path does not exist</value>
  </data>
  <data name="RecordMicrophone" xml:space="preserve">
    <value>Record Microphone</value>
  </data>
  <data name="RegionSizeError" xml:space="preserve">
    <value>Region less than 100 x 100 cannot be recorded</value>
  </data>
  <data name="SetsTheRecordingPath" xml:space="preserve">
    <value>Sets the recording path</value>
  </data>
  <data name="ShortcutSettings" xml:space="preserve">
    <value>Shortcut Settings</value>
  </data>
  <data name="StartRecording" xml:space="preserve">
    <value>Start Recording</value>
  </data>
  <data name="StopRecording" xml:space="preserve">
    <value>Stop Recording</value>
  </data>
  <data name="TheRecordingPathIsNotSet" xml:space="preserve">
    <value>The recording path is not set. Please set the recording path</value>
  </data>
</root>